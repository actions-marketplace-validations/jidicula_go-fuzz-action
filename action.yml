name: "Go fuzz test"
description: "A GitHub Action for running go test -fuzz."

branding:
  icon: "check-circle"
  color: "green"

inputs:
  fuzz-regexp:
    description: 'Run the fuzz test matching the regular expression. Default is `Fuzz`. Corresponds to the `-fuzz` flag for the `go test` command.'
    required: false
    default: 'Fuzz'
  fuzz-time:
    description: 'Fuzz target iteration duration, specified as a `time.Duration` (for example `1h30s`). Corresponds to `-fuzztime` flag for the `go test` command. Ensure this is less than your job timeout.'
    required: true
    default: '60s'
  fuzz-minimize-time:
    description: 'Fuzz minimization duration, specified as a `time.Duration` (for example `1h30s`). Corresponds to `-fuzzminimizetime` flag for the `go test` command. Ensure this is less than your job timeout.'
    required: false
    default: '10s'

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: '1.18'
    - shell: bash
      run: go test -fuzz="${{ inputs.fuzz-regexp }}" -fuzztime="${{ inputs.fuzz-time }}" -fuzzminimizetime="${{ inputs.fuzz-minimize-time }}"
    - name: Upload fuzz failure seed corpus as run artifact
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: testdata
        path: testdata
    - name: Output message
      if: failure()
      shell: bash
      run: |
        MESSAGE='Fuzz test failed. Download the seed corpus with\n```\ngh run download ${{ github.run_id }} -n testdata\n```'
        echo -e "$MESSAGE"
    - name: Report failure
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'Fuzz test failed. Download the seed corpus with\n```\ngh run download ${{ github.run_id }} -n testdata\n```'
          })
